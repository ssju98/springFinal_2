<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 빈 자동 스캔 - servlet-context.xml에 Controller 자동 스캔 설정해서 아래 설정에서는
	     Controller 자동 스캔 제외 -->
	<context:component-scan base-package="kr.spring">
		<!-- Controller를 스캔 대상에서 제외시킴 -->
		<context:exclude-filter type="annotation" 
		             expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<context:property-placeholder location="classpath:config/jdbc.properties"/>
		
	<!-- 커넥션 풀을 이용한 DataSource 설정 -->
	<bean id="dataSource"
	           class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대 커넥션 개수 -->
		<property name="maxActive" value="50"/>
		<!-- 접속이 없을 경우 최대 유지 커넥션 개수 -->
		<property name="maxIdle" value="30"/>
		<!-- 접속이 없을 경우 최소 유지 커넥션 개수 -->
		<property name="minIdle" value="20"/>
		<!-- 최대 대기시간(초):초과시 연결 실패 오류 발생 -->
		<property name="maxWait" value="5"/>
	</bean>	
	
	<!-- JDBC 기반 트랜잭션 관리자 설정 -->
	<bean id="transactionManager"
	   class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	   p:dataSource-ref="dataSource"/>
	   
	<!-- 어노테이션 방식으로 처리하기 위한 설정 --> 
	<tx:annotation-driven transaction-manager="transactionManager"/>  
	
	<!-- mybatis 설정 -->
	<bean id="sqlSessionFactory"
	         class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="kr.spring.member.vo, kr.spring.category_top.vo, 
											kr.spring.category_sub.vo,kr.spring.product.vo,kr.spring.login.vo,
											 kr.spring.soption.vo, kr.spring.cart.vo, kr.spring.order.vo,
											kr.spring.sorder_detail.vo, kr.spring.delivery.vo,
											kr.spring.delivery_status.vo, kr.spring.review.vo, kr.spring.qna.vo,
											kr.spring.adminMember.vo, kr.spring.adminOrder.vo"/>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.spring.**.dao"/>
	</bean>		
	<!-- gmail설정 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
	     <property name="host" value="smtp.gmail.com" />
	     <property name="port" value="587" />
	 <property name="username" value=""/> <!-- 자신의 이메일 아이디 -->
	 <property name="password" value=""/> <!-- 자신의 비밀번호 -->
	 <!-- 보안연결 TLS과 관련된 설정 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true </prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
</beans>
